# Docker
alias dcu="docker compose up -d"
alias dps="docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Image}}""
alias dd="docker compose down"
alias vwipe="docker volume rm $(docker volume ls -q)"

# Git
alias gco="git checkout"
alias gpl="git pull"
alias gps="git push"
alias gr="git rebase"
alias gra="git rebase --abort"
alias grc="git rebase --continue"
alias grm='branch=$(git branch --show-current) && git stash && git checkout master && git pull origin master && git checkout $branch && git rebase master && git stash pop'


# General
alias ls='ls --color=auto'
alias ll="ls -la --color=auto"
alias brewu='brew update && brew upgrade && echo "Pinned package not upgraded:" && brew list --pinned'

# Dotfiles
alias cm="chezmoi"
alias cmapply="chezmoi apply && source ~/.zshrc"

# Functions

function cmedit() {
  chezmoi edit ~/."$1"
}

function dwipe {
  echo "Executing docker compose down"
  docker compose down --volumes
  echo "Stopping and removing all containers"
  # Alle Container stoppen und entfernen
  containers=$(docker ps -aq)
  if [ -n "$containers" ]; then
    for container in $containers; do
      docker stop $container >/dev/null 2>&1
      docker rm $container >/dev/null 2>&1
    done
    echo "All containers stopped and removed."
  else
    echo "No containers to stop and remove."
  fi

  echo "Removing all stopped containers, networks, dangling images and build cache"
  # Docker-Systembereinigung durchfÃ¼hren
  docker system prune --force --volumes >/dev/null 2>&1
  echo "Docker system cleaned."
}

function iwipe {
  echo "Removing all images"
	docker image prune -a -f
}

function dl {
  local container_name=$1
  local tail_lines=${2:-10}
  docker logs -f --tail $tail_lines "$container_name" | jq -c -R 'fromjson? | {timestamp: .t."$date", message: .msg}'
}

function pass() {
    keepassxc-cli show -s -f Password /path/to/your/database.kdbx "$1"
}
