export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d"

# Set global PATH to enable homebrew
export PATH="/opt/homebrew/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:$PATH"

# Disable brew autoupdates
export HOMEBREW_NO_AUTO_UPDATE=1

# Specify your defaults in this environment variable
export HOMEBREW_CASK_OPTS="--appdir=~/Applications --fontdir=/Library/Fonts"

# Needed for legacy x86 container
export DOCKER_DEFAULT_PLATFORM=linux/amd64

# Set editor
export EDITOR="nvim"

# Import alias
[ -f $HOME/.aliasrc ] && source $HOME/.aliasrc

# Others
export LANGUAGE=en_US:en

export HOMEBREW_NO_AUTO_UPDATE=1

# Configure kind (kubernetes) and podman
# export KIND_EXPERIMENTAL_PROVIDER=podman


# export DOCKER_HOST=unix://$(podman machine inspect --format "{{.ConnectionInfo.PodmanSocket.Path}}")

# export PODMAN_COMPOSE_WARNING_LOGS=false # Disable simulate docker warning

eval "$(starship init zsh)"
